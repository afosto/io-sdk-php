<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Afosto\Sdk;

abstract class AbstractSdk
{
    abstract public function getToken(): \Afosto\Sdk\Model\IamTokenRequest;

    /**
     * @return string
     *
     * @throws \Psr\SimpleCache\InvalidArgumentException
     * @throws \Afosto\Sdk\Exception\GetAccessTokenUnauthorizedException
     * @throws \Afosto\Sdk\Exception\GetAccessTokenNotFoundException
     */
    protected function authenticate()
    {
        $client = \Afosto\Sdk\Client::create();
        $response = $client->getAccessToken($this->getToken());

        return $response->getAccessToken();
    }

    /**
     * Return the available printers.
     *
     * @return \Afosto\Sdk\Client
     *
     * @throws \Psr\SimpleCache\InvalidArgumentException
     * @throws \Afosto\Sdk\Exception\GetAccessTokenUnauthorizedException
     * @throws \Afosto\Sdk\Exception\GetAccessTokenNotFoundException
     */
    public function getAuthorizedClient()
    {
        $token = $this->authenticate();

        $bearer = new \Http\Message\Authentication\Bearer($token);
        $httpClient = \Http\Discovery\HttpClientDiscovery::find();
        $plugins = [];
        $uri = \Http\Discovery\UriFactoryDiscovery::find()->createUri('https://api.afosto.io');
        $plugins[] = new \Http\Client\Common\Plugin\AddHostPlugin($uri);
        $plugins[] = new \Http\Client\Common\Plugin\AuthenticationPlugin($bearer);
        $httpClient = new \Http\Client\Common\PluginClient($httpClient, $plugins);

        return \Afosto\Sdk\Client::create($httpClient);
    }

    public function getUnAuthorizedClient()
    {
        return \Afosto\Sdk\Client::create();
    }
}
