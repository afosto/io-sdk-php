<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Afosto\Sdk\Endpoint;

class AnnounceProfile extends \Jane\OpenApiRuntime\Client\BaseEndpoint implements \Jane\OpenApiRuntime\Client\Psr7HttplugEndpoint
{
    protected $path;

    /**
     * Announce an new profile.
     *
     * @param string    $path the key we want to register
     * @param \stdClass $body Announce a profile definition for a given path
     */
    public function __construct(string $path, \stdClass $body)
    {
        $this->path = $path;
        $this->body = $body;
    }

    use \Jane\OpenApiRuntime\Client\Psr7HttplugEndpointTrait;

    public function getMethod(): string
    {
        return 'PUT';
    }

    public function getUri(): string
    {
        return str_replace(['{path}'], [$this->path], '/iam/profiles/{path}/announce');
    }

    public function getBody(\Symfony\Component\Serializer\SerializerInterface $serializer, \Http\Message\StreamFactory $streamFactory = null): array
    {
        return [[], $this->body];
    }

    public function getExtraHeaders(): array
    {
        return ['Accept' => ['application/json']];
    }

    /**
     * {@inheritdoc}
     *
     * @throws \Afosto\Sdk\Exception\AnnounceProfileBadRequestException
     * @throws \Afosto\Sdk\Exception\AnnounceProfileUnauthorizedException
     * @throws \Afosto\Sdk\Exception\AnnounceProfileForbiddenException
     * @throws \Afosto\Sdk\Exception\AnnounceProfileConflictException
     */
    protected function transformResponseBody(string $body, int $status, \Symfony\Component\Serializer\SerializerInterface $serializer)
    {
        if (400 === $status) {
            throw new \Afosto\Sdk\Exception\AnnounceProfileBadRequestException($serializer->deserialize($body, 'Afosto\\Sdk\\Model\\Error', 'json'));
        }
        if (401 === $status) {
            throw new \Afosto\Sdk\Exception\AnnounceProfileUnauthorizedException($serializer->deserialize($body, 'Afosto\\Sdk\\Model\\Error', 'json'));
        }
        if (403 === $status) {
            throw new \Afosto\Sdk\Exception\AnnounceProfileForbiddenException($serializer->deserialize($body, 'Afosto\\Sdk\\Model\\Error', 'json'));
        }
        if (409 === $status) {
            throw new \Afosto\Sdk\Exception\AnnounceProfileConflictException($serializer->deserialize($body, 'Afosto\\Sdk\\Model\\Error', 'json'));
        }
        if (200 === $status) {
            return json_decode($body);
        }
    }
}
