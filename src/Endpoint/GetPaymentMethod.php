<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Afosto\Sdk\Endpoint;

class GetPaymentMethod extends \Jane\OpenApiRuntime\Client\BaseEndpoint implements \Jane\OpenApiRuntime\Client\Psr7Endpoint
{
    protected $provider_code;
    protected $code;

    /**
     * Get single payment method.
     */
    public function __construct(string $providerCode, string $code)
    {
        $this->provider_code = $providerCode;
        $this->code = $code;
    }

    use \Jane\OpenApiRuntime\Client\Psr7EndpointTrait;

    public function getMethod(): string
    {
        return 'GET';
    }

    public function getUri(): string
    {
        return str_replace(['{provider_code}', '{code}'], [$this->provider_code, $this->code], '/odr/methods/{provider_code}/{code}');
    }

    public function getBody(\Symfony\Component\Serializer\SerializerInterface $serializer, $streamFactory = null): array
    {
        return [[], null];
    }

    public function getExtraHeaders(): array
    {
        return ['Accept' => ['application/json']];
    }

    /**
     * {@inheritdoc}
     *
     * @throws \Afosto\Sdk\Exception\GetPaymentMethodBadRequestException
     * @throws \Afosto\Sdk\Exception\GetPaymentMethodUnauthorizedException
     * @throws \Afosto\Sdk\Exception\GetPaymentMethodForbiddenException
     * @throws \Afosto\Sdk\Exception\GetPaymentMethodNotFoundException
     * @throws \Afosto\Sdk\Exception\GetPaymentMethodInternalServerErrorException
     * @throws \Afosto\Sdk\Exception\GetPaymentMethodServiceUnavailableException
     *
     * @return \Afosto\Sdk\Model\OdrMethod|null
     */
    protected function transformResponseBody(string $body, int $status, \Symfony\Component\Serializer\SerializerInterface $serializer, ?string $contentType)
    {
        if (200 === $status) {
            return $serializer->deserialize($body, 'Afosto\\Sdk\\Model\\OdrMethod', 'json');
        }
        if (400 === $status) {
            throw new \Afosto\Sdk\Exception\GetPaymentMethodBadRequestException($serializer->deserialize($body, 'Afosto\\Sdk\\Model\\Error', 'json'));
        }
        if (401 === $status) {
            throw new \Afosto\Sdk\Exception\GetPaymentMethodUnauthorizedException($serializer->deserialize($body, 'Afosto\\Sdk\\Model\\Error', 'json'));
        }
        if (403 === $status) {
            throw new \Afosto\Sdk\Exception\GetPaymentMethodForbiddenException($serializer->deserialize($body, 'Afosto\\Sdk\\Model\\Error', 'json'));
        }
        if (404 === $status) {
            throw new \Afosto\Sdk\Exception\GetPaymentMethodNotFoundException($serializer->deserialize($body, 'Afosto\\Sdk\\Model\\Error', 'json'));
        }
        if (500 === $status) {
            throw new \Afosto\Sdk\Exception\GetPaymentMethodInternalServerErrorException($serializer->deserialize($body, 'Afosto\\Sdk\\Model\\Error', 'json'));
        }
        if (503 === $status) {
            throw new \Afosto\Sdk\Exception\GetPaymentMethodServiceUnavailableException($serializer->deserialize($body, 'Afosto\\Sdk\\Model\\Error', 'json'));
        }
    }
}
