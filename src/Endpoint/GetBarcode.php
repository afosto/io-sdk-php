<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Afosto\Sdk\Endpoint;

class GetBarcode extends \Jane\OpenApiRuntime\Client\BaseEndpoint implements \Jane\OpenApiRuntime\Client\Psr7Endpoint
{
    /**
     * Render a barcode.
     *
     * @param array $queryParameters {
     *
     *     @var string $t Type of barcode
     *     @var string $v Value of the barcode
     *     @var int $w Width of the barcode in pixels
     *     @var int $h Height of the barcode in pixels
     * }
     */
    public function __construct(array $queryParameters = [])
    {
        $this->queryParameters = $queryParameters;
    }

    use \Jane\OpenApiRuntime\Client\Psr7EndpointTrait;

    public function getMethod(): string
    {
        return 'GET';
    }

    public function getUri(): string
    {
        return '/cnt/barcode';
    }

    public function getBody(\Symfony\Component\Serializer\SerializerInterface $serializer, $streamFactory = null): array
    {
        return [[], null];
    }

    public function getExtraHeaders(): array
    {
        return ['Accept' => ['application/json']];
    }

    protected function getQueryOptionsResolver(): \Symfony\Component\OptionsResolver\OptionsResolver
    {
        $optionsResolver = parent::getQueryOptionsResolver();
        $optionsResolver->setDefined(['t', 'v', 'w', 'h']);
        $optionsResolver->setRequired(['t', 'v']);
        $optionsResolver->setDefaults([]);
        $optionsResolver->setAllowedTypes('t', ['string']);
        $optionsResolver->setAllowedTypes('v', ['string']);
        $optionsResolver->setAllowedTypes('w', ['int']);
        $optionsResolver->setAllowedTypes('h', ['int']);

        return $optionsResolver;
    }

    /**
     * {@inheritdoc}
     *
     * @throws \Afosto\Sdk\Exception\GetBarcodeBadRequestException
     * @throws \Afosto\Sdk\Exception\GetBarcodeUnauthorizedException
     * @throws \Afosto\Sdk\Exception\GetBarcodeForbiddenException
     * @throws \Afosto\Sdk\Exception\GetBarcodeNotFoundException
     * @throws \Afosto\Sdk\Exception\GetBarcodeInternalServerErrorException
     * @throws \Afosto\Sdk\Exception\GetBarcodeServiceUnavailableException
     *
     * @return null
     */
    protected function transformResponseBody(string $body, int $status, \Symfony\Component\Serializer\SerializerInterface $serializer, ?string $contentType)
    {
        if (200 === $status) {
            return null;
        }
        if (400 === $status) {
            throw new \Afosto\Sdk\Exception\GetBarcodeBadRequestException($serializer->deserialize($body, 'Afosto\\Sdk\\Model\\Error', 'json'));
        }
        if (401 === $status) {
            throw new \Afosto\Sdk\Exception\GetBarcodeUnauthorizedException($serializer->deserialize($body, 'Afosto\\Sdk\\Model\\Error', 'json'));
        }
        if (403 === $status) {
            throw new \Afosto\Sdk\Exception\GetBarcodeForbiddenException($serializer->deserialize($body, 'Afosto\\Sdk\\Model\\Error', 'json'));
        }
        if (404 === $status) {
            throw new \Afosto\Sdk\Exception\GetBarcodeNotFoundException($serializer->deserialize($body, 'Afosto\\Sdk\\Model\\Error', 'json'));
        }
        if (500 === $status) {
            throw new \Afosto\Sdk\Exception\GetBarcodeInternalServerErrorException($serializer->deserialize($body, 'Afosto\\Sdk\\Model\\Error', 'json'));
        }
        if (503 === $status) {
            throw new \Afosto\Sdk\Exception\GetBarcodeServiceUnavailableException($serializer->deserialize($body, 'Afosto\\Sdk\\Model\\Error', 'json'));
        }
    }
}
