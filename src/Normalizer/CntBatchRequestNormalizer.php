<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Afosto\Sdk\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class CntBatchRequestNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return 'Afosto\\Sdk\\Model\\CntBatchRequest' === $type;
    }

    public function supportsNormalization($data, $format = null)
    {
        return 'Afosto\\Sdk\\Model\\CntBatchRequest' === get_class($data);
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Afosto\Sdk\Model\CntBatchRequest();
        if (property_exists($data, 'action_id') && null !== $data->{'action_id'}) {
            $object->setActionId($data->{'action_id'});
        }
        if (property_exists($data, 'reference') && null !== $data->{'reference'}) {
            $object->setReference($data->{'reference'});
        }
        if (property_exists($data, 'dataset_id') && null !== $data->{'dataset_id'}) {
            $object->setDatasetId($data->{'dataset_id'});
        }
        if (property_exists($data, 'config') && null !== $data->{'config'}) {
            $object->setConfig($data->{'config'});
        }
        if (property_exists($data, 'import') && null !== $data->{'import'}) {
            $object->setImport($this->denormalizer->denormalize($data->{'import'}, 'Afosto\\Sdk\\Model\\CntBatchRequestImport', 'json', $context));
        }
        if (property_exists($data, 'export') && null !== $data->{'export'}) {
            $object->setExport($this->denormalizer->denormalize($data->{'export'}, 'Afosto\\Sdk\\Model\\CntBatchRequestExport', 'json', $context));
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getActionId()) {
            $data->{'action_id'} = $object->getActionId();
        }
        if (null !== $object->getReference()) {
            $data->{'reference'} = $object->getReference();
        }
        if (null !== $object->getDatasetId()) {
            $data->{'dataset_id'} = $object->getDatasetId();
        }
        if (null !== $object->getConfig()) {
            $data->{'config'} = $object->getConfig();
        }
        if (null !== $object->getImport()) {
            $data->{'import'} = $this->normalizer->normalize($object->getImport(), 'json', $context);
        }
        if (null !== $object->getExport()) {
            $data->{'export'} = $this->normalizer->normalize($object->getExport(), 'json', $context);
        }

        return $data;
    }
}
