<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Afosto\Sdk\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class OmsCustomerModelNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Afosto\\Sdk\\Model\\OmsCustomerModel';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'Afosto\\Sdk\\Model\\OmsCustomerModel';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Afosto\Sdk\Model\OmsCustomerModel();
        if (property_exists($data, 'company') && $data->{'company'} !== null) {
            $object->setCompany($data->{'company'});
        }
        if (property_exists($data, 'first_name') && $data->{'first_name'} !== null) {
            $object->setFirstName($data->{'first_name'});
        }
        if (property_exists($data, 'last_name') && $data->{'last_name'} !== null) {
            $object->setLastName($data->{'last_name'});
        }
        if (property_exists($data, 'last_name_prefix') && $data->{'last_name_prefix'} !== null) {
            $object->setLastNamePrefix($data->{'last_name_prefix'});
        }
        if (property_exists($data, 'is_female') && $data->{'is_female'} !== null) {
            $object->setIsFemale($data->{'is_female'});
        }
        if (property_exists($data, 'born_at') && $data->{'born_at'} !== null) {
            $object->setBornAt(\DateTime::createFromFormat("Y-m-d\TH:i:sP", $data->{'born_at'}));
        }
        if (property_exists($data, 'phone_number') && $data->{'phone_number'} !== null) {
            $object->setPhoneNumber($data->{'phone_number'});
        }
        if (property_exists($data, 'email') && $data->{'email'} !== null) {
            $object->setEmail($data->{'email'});
        }
        if (property_exists($data, 'billing') && $data->{'billing'} !== null) {
            $values = [];
            foreach ($data->{'billing'} as $value) {
                $values[] = $this->denormalizer->denormalize($value, 'Afosto\\Sdk\\Model\\OmsAddress', 'json', $context);
            }
            $object->setBilling($values);
        }
        if (property_exists($data, 'shipping') && $data->{'shipping'} !== null) {
            $values_1 = [];
            foreach ($data->{'shipping'} as $value_1) {
                $values_1[] = $this->denormalizer->denormalize($value_1, 'Afosto\\Sdk\\Model\\OmsAddress', 'json', $context);
            }
            $object->setShipping($values_1);
        }
        if (property_exists($data, 'group_id') && $data->{'group_id'} !== null) {
            $object->setGroupId($data->{'group_id'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getCompany()) {
            $data->{'company'} = $object->getCompany();
        }
        if (null !== $object->getFirstName()) {
            $data->{'first_name'} = $object->getFirstName();
        }
        if (null !== $object->getLastName()) {
            $data->{'last_name'} = $object->getLastName();
        }
        if (null !== $object->getLastNamePrefix()) {
            $data->{'last_name_prefix'} = $object->getLastNamePrefix();
        }
        if (null !== $object->getIsFemale()) {
            $data->{'is_female'} = $object->getIsFemale();
        }
        if (null !== $object->getBornAt()) {
            $data->{'born_at'} = $object->getBornAt()->format("Y-m-d\TH:i:sP");
        }
        if (null !== $object->getPhoneNumber()) {
            $data->{'phone_number'} = $object->getPhoneNumber();
        }
        if (null !== $object->getEmail()) {
            $data->{'email'} = $object->getEmail();
        }
        if (null !== $object->getBilling()) {
            $values = [];
            foreach ($object->getBilling() as $value) {
                $values[] = $this->normalizer->normalize($value, 'json', $context);
            }
            $data->{'billing'} = $values;
        }
        if (null !== $object->getShipping()) {
            $values_1 = [];
            foreach ($object->getShipping() as $value_1) {
                $values_1[] = $this->normalizer->normalize($value_1, 'json', $context);
            }
            $data->{'shipping'} = $values_1;
        }
        if (null !== $object->getGroupId()) {
            $data->{'group_id'} = $object->getGroupId();
        }

        return $data;
    }
}
