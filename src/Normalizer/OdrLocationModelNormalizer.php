<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Afosto\Sdk\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class OdrLocationModelNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Afosto\\Sdk\\Model\\OdrLocationModel';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'Afosto\\Sdk\\Model\\OdrLocationModel';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Afosto\Sdk\Model\OdrLocationModel();
        if (property_exists($data, 'id') && $data->{'id'} !== null) {
            $object->setId($data->{'id'});
        }
        if (property_exists($data, 'name') && $data->{'name'} !== null) {
            $object->setName($data->{'name'});
        }
        if (property_exists($data, 'country_iso') && $data->{'country_iso'} !== null) {
            $object->setCountryIso($data->{'country_iso'});
        }
        if (property_exists($data, 'is_customer') && $data->{'is_customer'} !== null) {
            $object->setIsCustomer($data->{'is_customer'});
        }
        if (property_exists($data, 'is_tracking_inventory') && $data->{'is_tracking_inventory'} !== null) {
            $object->setIsTrackingInventory($data->{'is_tracking_inventory'});
        }
        if (property_exists($data, 'warehouse_id') && $data->{'warehouse_id'} !== null) {
            $object->setWarehouseId($data->{'warehouse_id'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getId()) {
            $data->{'id'} = $object->getId();
        }
        if (null !== $object->getName()) {
            $data->{'name'} = $object->getName();
        }
        if (null !== $object->getCountryIso()) {
            $data->{'country_iso'} = $object->getCountryIso();
        }
        if (null !== $object->getIsCustomer()) {
            $data->{'is_customer'} = $object->getIsCustomer();
        }
        if (null !== $object->getIsTrackingInventory()) {
            $data->{'is_tracking_inventory'} = $object->getIsTrackingInventory();
        }
        if (null !== $object->getWarehouseId()) {
            $data->{'warehouse_id'} = $object->getWarehouseId();
        }

        return $data;
    }
}
