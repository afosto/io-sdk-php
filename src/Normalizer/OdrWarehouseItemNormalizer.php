<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Afosto\Sdk\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class OdrWarehouseItemNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Afosto\\Sdk\\Model\\OdrWarehouseItem';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'Afosto\\Sdk\\Model\\OdrWarehouseItem';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Afosto\Sdk\Model\OdrWarehouseItem();
        if (property_exists($data, 'id') && $data->{'id'} !== null) {
            $object->setId($data->{'id'});
        }
        if (property_exists($data, 'sku') && $data->{'sku'} !== null) {
            $object->setSku($data->{'sku'});
        }
        if (property_exists($data, 'position') && $data->{'position'} !== null) {
            $object->setPosition($data->{'position'});
        }
        if (property_exists($data, 'is_available') && $data->{'is_available'} !== null) {
            $object->setIsAvailable($data->{'is_available'});
        }
        if (property_exists($data, 'is_in_transit') && $data->{'is_in_transit'} !== null) {
            $object->setIsInTransit($data->{'is_in_transit'});
        }
        if (property_exists($data, 'is_reserved') && $data->{'is_reserved'} !== null) {
            $object->setIsReserved($data->{'is_reserved'});
        }
        if (property_exists($data, 'reservation_expires_at') && $data->{'reservation_expires_at'} !== null) {
            $object->setReservationExpiresAt(\DateTime::createFromFormat("Y-m-d\TH:i:sP", $data->{'reservation_expires_at'}));
        }
        if (property_exists($data, 'warehouse_id') && $data->{'warehouse_id'} !== null) {
            $object->setWarehouseId($data->{'warehouse_id'});
        }
        if (property_exists($data, 'metadata') && $data->{'metadata'} !== null) {
            $object->setMetadata($data->{'metadata'});
        }
        if (property_exists($data, 'created_at') && $data->{'created_at'} !== null) {
            $object->setCreatedAt(\DateTime::createFromFormat("Y-m-d\TH:i:sP", $data->{'created_at'}));
        }
        if (property_exists($data, 'updated_at') && $data->{'updated_at'} !== null) {
            $object->setUpdatedAt(\DateTime::createFromFormat("Y-m-d\TH:i:sP", $data->{'updated_at'}));
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getId()) {
            $data->{'id'} = $object->getId();
        }
        if (null !== $object->getSku()) {
            $data->{'sku'} = $object->getSku();
        }
        if (null !== $object->getPosition()) {
            $data->{'position'} = $object->getPosition();
        }
        if (null !== $object->getIsAvailable()) {
            $data->{'is_available'} = $object->getIsAvailable();
        }
        if (null !== $object->getIsInTransit()) {
            $data->{'is_in_transit'} = $object->getIsInTransit();
        }
        if (null !== $object->getIsReserved()) {
            $data->{'is_reserved'} = $object->getIsReserved();
        }
        if (null !== $object->getReservationExpiresAt()) {
            $data->{'reservation_expires_at'} = $object->getReservationExpiresAt()->format("Y-m-d\TH:i:sP");
        }
        if (null !== $object->getWarehouseId()) {
            $data->{'warehouse_id'} = $object->getWarehouseId();
        }
        if (null !== $object->getMetadata()) {
            $data->{'metadata'} = $object->getMetadata();
        }
        if (null !== $object->getCreatedAt()) {
            $data->{'created_at'} = $object->getCreatedAt()->format("Y-m-d\TH:i:sP");
        }
        if (null !== $object->getUpdatedAt()) {
            $data->{'updated_at'} = $object->getUpdatedAt()->format("Y-m-d\TH:i:sP");
        }

        return $data;
    }
}
