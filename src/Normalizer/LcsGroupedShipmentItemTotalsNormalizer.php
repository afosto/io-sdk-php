<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Afosto\Sdk\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class LcsGroupedShipmentItemTotalsNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return 'Afosto\\Sdk\\Model\\LcsGroupedShipmentItemTotals' === $type;
    }

    public function supportsNormalization($data, $format = null)
    {
        return is_object($data) && 'Afosto\\Sdk\\Model\\LcsGroupedShipmentItemTotals' === get_class($data);
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Afosto\Sdk\Model\LcsGroupedShipmentItemTotals();
        if (property_exists($data, 'boxed') && null !== $data->{'boxed'}) {
            $object->setBoxed($data->{'boxed'});
        }
        if (property_exists($data, 'handled') && null !== $data->{'handled'}) {
            $object->setHandled($data->{'handled'});
        }
        if (property_exists($data, 'finished') && null !== $data->{'finished'}) {
            $object->setFinished($data->{'finished'});
        }
        if (property_exists($data, 'missing') && null !== $data->{'missing'}) {
            $object->setMissing($data->{'missing'});
        }
        if (property_exists($data, 'listed') && null !== $data->{'listed'}) {
            $object->setListed($data->{'listed'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getBoxed()) {
            $data->{'boxed'} = $object->getBoxed();
        }
        if (null !== $object->getHandled()) {
            $data->{'handled'} = $object->getHandled();
        }
        if (null !== $object->getFinished()) {
            $data->{'finished'} = $object->getFinished();
        }
        if (null !== $object->getMissing()) {
            $data->{'missing'} = $object->getMissing();
        }
        if (null !== $object->getListed()) {
            $data->{'listed'} = $object->getListed();
        }

        return $data;
    }
}
