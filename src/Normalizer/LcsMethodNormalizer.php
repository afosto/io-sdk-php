<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Afosto\Sdk\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class LcsMethodNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Afosto\\Sdk\\Model\\LcsMethod';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'Afosto\\Sdk\\Model\\LcsMethod';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Afosto\Sdk\Model\LcsMethod();
        if (property_exists($data, 'carrier_code') && $data->{'carrier_code'} !== null) {
            $object->setCarrierCode($data->{'carrier_code'});
        }
        if (property_exists($data, 'method_code') && $data->{'method_code'} !== null) {
            $object->setMethodCode($data->{'method_code'});
        }
        if (property_exists($data, 'name') && $data->{'name'} !== null) {
            $object->setName($data->{'name'});
        }
        if (property_exists($data, 'description') && $data->{'description'} !== null) {
            $object->setDescription($data->{'description'});
        }
        if (property_exists($data, 'delivery_during') && $data->{'delivery_during'} !== null) {
            $object->setDeliveryDuring($data->{'delivery_during'});
        }
        if (property_exists($data, 'is_same_day') && $data->{'is_same_day'} !== null) {
            $object->setIsSameDay($data->{'is_same_day'});
        }
        if (property_exists($data, 'is_sunday') && $data->{'is_sunday'} !== null) {
            $object->setIsSunday($data->{'is_sunday'});
        }
        if (property_exists($data, 'is_carrier_location') && $data->{'is_carrier_location'} !== null) {
            $object->setIsCarrierLocation($data->{'is_carrier_location'});
        }
        if (property_exists($data, 'is_neighbour_allowed') && $data->{'is_neighbour_allowed'} !== null) {
            $object->setIsNeighbourAllowed($data->{'is_neighbour_allowed'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getCarrierCode()) {
            $data->{'carrier_code'} = $object->getCarrierCode();
        }
        if (null !== $object->getMethodCode()) {
            $data->{'method_code'} = $object->getMethodCode();
        }
        if (null !== $object->getName()) {
            $data->{'name'} = $object->getName();
        }
        if (null !== $object->getDescription()) {
            $data->{'description'} = $object->getDescription();
        }
        if (null !== $object->getDeliveryDuring()) {
            $data->{'delivery_during'} = $object->getDeliveryDuring();
        }
        if (null !== $object->getIsSameDay()) {
            $data->{'is_same_day'} = $object->getIsSameDay();
        }
        if (null !== $object->getIsSunday()) {
            $data->{'is_sunday'} = $object->getIsSunday();
        }
        if (null !== $object->getIsCarrierLocation()) {
            $data->{'is_carrier_location'} = $object->getIsCarrierLocation();
        }
        if (null !== $object->getIsNeighbourAllowed()) {
            $data->{'is_neighbour_allowed'} = $object->getIsNeighbourAllowed();
        }

        return $data;
    }
}
