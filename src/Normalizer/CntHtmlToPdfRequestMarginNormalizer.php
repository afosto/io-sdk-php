<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Afosto\Sdk\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class CntHtmlToPdfRequestMarginNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Afosto\\Sdk\\Model\\CntHtmlToPdfRequestMargin';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'Afosto\\Sdk\\Model\\CntHtmlToPdfRequestMargin';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Afosto\Sdk\Model\CntHtmlToPdfRequestMargin();
        if (property_exists($data, 'top') && $data->{'top'} !== null) {
            $object->setTop($data->{'top'});
        }
        if (property_exists($data, 'bottom') && $data->{'bottom'} !== null) {
            $object->setBottom($data->{'bottom'});
        }
        if (property_exists($data, 'left') && $data->{'left'} !== null) {
            $object->setLeft($data->{'left'});
        }
        if (property_exists($data, 'right') && $data->{'right'} !== null) {
            $object->setRight($data->{'right'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getTop()) {
            $data->{'top'} = $object->getTop();
        }
        if (null !== $object->getBottom()) {
            $data->{'bottom'} = $object->getBottom();
        }
        if (null !== $object->getLeft()) {
            $data->{'left'} = $object->getLeft();
        }
        if (null !== $object->getRight()) {
            $data->{'right'} = $object->getRight();
        }

        return $data;
    }
}
