<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Afosto\Sdk\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class PkrShipmentItemsItemImageNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Afosto\\Sdk\\Model\\PkrShipmentItemsItemImage';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'Afosto\\Sdk\\Model\\PkrShipmentItemsItemImage';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Afosto\Sdk\Model\PkrShipmentItemsItemImage();
        if (property_exists($data, 'original') && $data->{'original'} !== null) {
            $object->setOriginal($data->{'original'});
        }
        if (property_exists($data, 'thumbnails') && $data->{'thumbnails'} !== null) {
            $object->setThumbnails($this->denormalizer->denormalize($data->{'thumbnails'}, 'Afosto\\Sdk\\Model\\PkrShipmentItemsItemImageThumbnails', 'json', $context));
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getOriginal()) {
            $data->{'original'} = $object->getOriginal();
        }
        if (null !== $object->getThumbnails()) {
            $data->{'thumbnails'} = $this->normalizer->normalize($object->getThumbnails(), 'json', $context);
        }

        return $data;
    }
}
