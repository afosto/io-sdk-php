<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Afosto\Sdk\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class OdrContactContactNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return 'Afosto\\Sdk\\Model\\OdrContactContact' === $type;
    }

    public function supportsNormalization($data, $format = null)
    {
        return 'Afosto\\Sdk\\Model\\OdrContactContact' === get_class($data);
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Afosto\Sdk\Model\OdrContactContact();
        if (property_exists($data, 'email') && null !== $data->{'email'}) {
            $object->setEmail($data->{'email'});
        }
        if (property_exists($data, 'vat_number') && null !== $data->{'vat_number'}) {
            $object->setVatNumber($data->{'vat_number'});
        }
        if (property_exists($data, 'coc_number') && null !== $data->{'coc_number'}) {
            $object->setCocNumber($data->{'coc_number'});
        }
        if (property_exists($data, 'organisation_id') && null !== $data->{'organisation_id'}) {
            $object->setOrganisationId($data->{'organisation_id'});
        }
        if (property_exists($data, 'organisation_version') && null !== $data->{'organisation_version'}) {
            $object->setOrganisationVersion($data->{'organisation_version'});
        }
        if (property_exists($data, 'address_id') && null !== $data->{'address_id'}) {
            $object->setAddressId($data->{'address_id'});
        }
        if (property_exists($data, 'shipment_address_id') && null !== $data->{'shipment_address_id'}) {
            $object->setShipmentAddressId($data->{'shipment_address_id'});
        }
        if (property_exists($data, 'phone_number_id') && null !== $data->{'phone_number_id'}) {
            $object->setPhoneNumberId($data->{'phone_number_id'});
        }
        if (property_exists($data, 'id') && null !== $data->{'id'}) {
            $object->setId($data->{'id'});
        }
        if (property_exists($data, 'version') && null !== $data->{'version'}) {
            $object->setVersion($data->{'version'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getEmail()) {
            $data->{'email'} = $object->getEmail();
        }
        if (null !== $object->getVatNumber()) {
            $data->{'vat_number'} = $object->getVatNumber();
        }
        if (null !== $object->getCocNumber()) {
            $data->{'coc_number'} = $object->getCocNumber();
        }
        if (null !== $object->getOrganisationId()) {
            $data->{'organisation_id'} = $object->getOrganisationId();
        }
        if (null !== $object->getOrganisationVersion()) {
            $data->{'organisation_version'} = $object->getOrganisationVersion();
        }
        if (null !== $object->getAddressId()) {
            $data->{'address_id'} = $object->getAddressId();
        }
        if (null !== $object->getShipmentAddressId()) {
            $data->{'shipment_address_id'} = $object->getShipmentAddressId();
        }
        if (null !== $object->getPhoneNumberId()) {
            $data->{'phone_number_id'} = $object->getPhoneNumberId();
        }
        if (null !== $object->getId()) {
            $data->{'id'} = $object->getId();
        }
        if (null !== $object->getVersion()) {
            $data->{'version'} = $object->getVersion();
        }

        return $data;
    }
}
