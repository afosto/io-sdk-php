<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Afosto\Sdk\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class IamAddressNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Afosto\\Sdk\\Model\\IamAddress';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'Afosto\\Sdk\\Model\\IamAddress';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Afosto\Sdk\Model\IamAddress();
        if (property_exists($data, 'address_line_1') && $data->{'address_line_1'} !== null) {
            $object->setAddressLine1($data->{'address_line_1'});
        }
        if (property_exists($data, 'address_line_2') && $data->{'address_line_2'} !== null) {
            $object->setAddressLine2($data->{'address_line_2'});
        }
        if (property_exists($data, 'postal_code') && $data->{'postal_code'} !== null) {
            $object->setPostalCode($data->{'postal_code'});
        }
        if (property_exists($data, 'city') && $data->{'city'} !== null) {
            $object->setCity($data->{'city'});
        }
        if (property_exists($data, 'country_code') && $data->{'country_code'} !== null) {
            $object->setCountryCode($data->{'country_code'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getAddressLine1()) {
            $data->{'address_line_1'} = $object->getAddressLine1();
        }
        if (null !== $object->getAddressLine2()) {
            $data->{'address_line_2'} = $object->getAddressLine2();
        }
        if (null !== $object->getPostalCode()) {
            $data->{'postal_code'} = $object->getPostalCode();
        }
        if (null !== $object->getCity()) {
            $data->{'city'} = $object->getCity();
        }
        if (null !== $object->getCountryCode()) {
            $data->{'country_code'} = $object->getCountryCode();
        }

        return $data;
    }
}
