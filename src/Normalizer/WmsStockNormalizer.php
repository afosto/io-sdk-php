<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Afosto\Sdk\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class WmsStockNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return 'Afosto\\Sdk\\Model\\WmsStock' === $type;
    }

    public function supportsNormalization($data, $format = null)
    {
        return is_object($data) && 'Afosto\\Sdk\\Model\\WmsStock' === get_class($data);
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Afosto\Sdk\Model\WmsStock();
        if (property_exists($data, 'location_id') && null !== $data->{'location_id'}) {
            $object->setLocationId($data->{'location_id'});
        }
        if (property_exists($data, 'sku') && null !== $data->{'sku'}) {
            $object->setSku($data->{'sku'});
        }
        if (property_exists($data, 'position') && null !== $data->{'position'}) {
            $object->setPosition($data->{'position'});
        }
        if (property_exists($data, 'available') && null !== $data->{'available'}) {
            $object->setAvailable($data->{'available'});
        }
        if (property_exists($data, 'reserved') && null !== $data->{'reserved'}) {
            $object->setReserved($data->{'reserved'});
        }
        if (property_exists($data, 'claimed') && null !== $data->{'claimed'}) {
            $object->setClaimed($data->{'claimed'});
        }
        if (property_exists($data, 'transit') && null !== $data->{'transit'}) {
            $object->setTransit($data->{'transit'});
        }
        if (property_exists($data, 'missing') && null !== $data->{'missing'}) {
            $object->setMissing($data->{'missing'});
        }
        if (property_exists($data, 'backordered') && null !== $data->{'backordered'}) {
            $object->setBackordered($data->{'backordered'});
        }
        if (property_exists($data, 'total') && null !== $data->{'total'}) {
            $object->setTotal($data->{'total'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getLocationId()) {
            $data->{'location_id'} = $object->getLocationId();
        }
        if (null !== $object->getSku()) {
            $data->{'sku'} = $object->getSku();
        }
        if (null !== $object->getPosition()) {
            $data->{'position'} = $object->getPosition();
        }
        if (null !== $object->getAvailable()) {
            $data->{'available'} = $object->getAvailable();
        }
        if (null !== $object->getReserved()) {
            $data->{'reserved'} = $object->getReserved();
        }
        if (null !== $object->getClaimed()) {
            $data->{'claimed'} = $object->getClaimed();
        }
        if (null !== $object->getTransit()) {
            $data->{'transit'} = $object->getTransit();
        }
        if (null !== $object->getMissing()) {
            $data->{'missing'} = $object->getMissing();
        }
        if (null !== $object->getBackordered()) {
            $data->{'backordered'} = $object->getBackordered();
        }
        if (null !== $object->getTotal()) {
            $data->{'total'} = $object->getTotal();
        }

        return $data;
    }
}
