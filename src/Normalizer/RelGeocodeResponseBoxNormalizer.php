<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Afosto\Sdk\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class RelGeocodeResponseBoxNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return 'Afosto\\Sdk\\Model\\RelGeocodeResponseBox' === $type;
    }

    public function supportsNormalization($data, $format = null)
    {
        return is_object($data) && 'Afosto\\Sdk\\Model\\RelGeocodeResponseBox' === get_class($data);
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Afosto\Sdk\Model\RelGeocodeResponseBox();
        if (property_exists($data, 'north_east') && null !== $data->{'north_east'}) {
            $object->setNorthEast($this->denormalizer->denormalize($data->{'north_east'}, 'Afosto\\Sdk\\Model\\RelGeocodeResponseBoxNorthEast', 'json', $context));
        }
        if (property_exists($data, 'south_west') && null !== $data->{'south_west'}) {
            $object->setSouthWest($this->denormalizer->denormalize($data->{'south_west'}, 'Afosto\\Sdk\\Model\\RelGeocodeResponseBoxSouthWest', 'json', $context));
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getNorthEast()) {
            $data->{'north_east'} = $this->normalizer->normalize($object->getNorthEast(), 'json', $context);
        }
        if (null !== $object->getSouthWest()) {
            $data->{'south_west'} = $this->normalizer->normalize($object->getSouthWest(), 'json', $context);
        }

        return $data;
    }
}
