<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Afosto\Sdk\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class CatMapCollectionMissNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return 'Afosto\\Sdk\\Model\\CatMapCollectionMiss' === $type;
    }

    public function supportsNormalization($data, $format = null)
    {
        return is_object($data) && 'Afosto\\Sdk\\Model\\CatMapCollectionMiss' === get_class($data);
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Afosto\Sdk\Model\CatMapCollectionMiss();
        if (property_exists($data, 'key') && null !== $data->{'key'}) {
            $object->setKey($data->{'key'});
        }
        if (property_exists($data, 'count') && null !== $data->{'count'}) {
            $object->setCount($data->{'count'});
        }
        if (property_exists($data, 'last_miss_at') && null !== $data->{'last_miss_at'}) {
            $object->setLastMissAt(\DateTime::createFromFormat("Y-m-d\TH:i:sP", $data->{'last_miss_at'}));
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getKey()) {
            $data->{'key'} = $object->getKey();
        }
        if (null !== $object->getCount()) {
            $data->{'count'} = $object->getCount();
        }
        if (null !== $object->getLastMissAt()) {
            $data->{'last_miss_at'} = $object->getLastMissAt()->format("Y-m-d\TH:i:sP");
        }

        return $data;
    }
}
