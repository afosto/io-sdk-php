<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Afosto\Sdk\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class CntBatchNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return 'Afosto\\Sdk\\Model\\CntBatch' === $type;
    }

    public function supportsNormalization($data, $format = null)
    {
        return 'Afosto\\Sdk\\Model\\CntBatch' === get_class($data);
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Afosto\Sdk\Model\CntBatch();
        if (property_exists($data, 'id') && null !== $data->{'id'}) {
            $object->setId($data->{'id'});
        }
        if (property_exists($data, 'action_id') && null !== $data->{'action_id'}) {
            $object->setActionId($data->{'action_id'});
        }
        if (property_exists($data, 'reference') && null !== $data->{'reference'}) {
            $object->setReference($data->{'reference'});
        }
        if (property_exists($data, 'is_import') && null !== $data->{'is_import'}) {
            $object->setIsImport($data->{'is_import'});
        }
        if (property_exists($data, 'is_locked') && null !== $data->{'is_locked'}) {
            $object->setIsLocked($data->{'is_locked'});
        }
        if (property_exists($data, 'is_accepted') && null !== $data->{'is_accepted'}) {
            $object->setIsAccepted($data->{'is_accepted'});
        }
        if (property_exists($data, 'is_confirmed') && null !== $data->{'is_confirmed'}) {
            $object->setIsConfirmed($data->{'is_confirmed'});
        }
        if (property_exists($data, 'is_ready') && null !== $data->{'is_ready'}) {
            $object->setIsReady($data->{'is_ready'});
        }
        if (property_exists($data, 'is_failing') && null !== $data->{'is_failing'}) {
            $object->setIsFailing($data->{'is_failing'});
        }
        if (property_exists($data, 'config') && null !== $data->{'config'}) {
            $object->setConfig($data->{'config'});
        }
        if (property_exists($data, 'import') && null !== $data->{'import'}) {
            $object->setImport($this->denormalizer->denormalize($data->{'import'}, 'Afosto\\Sdk\\Model\\CntBatchImport', 'json', $context));
        }
        if (property_exists($data, 'export') && null !== $data->{'export'}) {
            $object->setExport($this->denormalizer->denormalize($data->{'export'}, 'Afosto\\Sdk\\Model\\CntBatchExport', 'json', $context));
        }
        if (property_exists($data, 'task_id') && null !== $data->{'task_id'}) {
            $object->setTaskId($data->{'task_id'});
        }
        if (property_exists($data, 'dataset_id') && null !== $data->{'dataset_id'}) {
            $object->setDatasetId($data->{'dataset_id'});
        }
        if (property_exists($data, 'created_at') && null !== $data->{'created_at'}) {
            $object->setCreatedAt(\DateTime::createFromFormat("Y-m-d\TH:i:sP", $data->{'created_at'}));
        }
        if (property_exists($data, 'updated_at') && null !== $data->{'updated_at'}) {
            $object->setUpdatedAt(\DateTime::createFromFormat("Y-m-d\TH:i:sP", $data->{'updated_at'}));
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getId()) {
            $data->{'id'} = $object->getId();
        }
        if (null !== $object->getActionId()) {
            $data->{'action_id'} = $object->getActionId();
        }
        if (null !== $object->getReference()) {
            $data->{'reference'} = $object->getReference();
        }
        if (null !== $object->getIsImport()) {
            $data->{'is_import'} = $object->getIsImport();
        }
        if (null !== $object->getIsLocked()) {
            $data->{'is_locked'} = $object->getIsLocked();
        }
        if (null !== $object->getIsAccepted()) {
            $data->{'is_accepted'} = $object->getIsAccepted();
        }
        if (null !== $object->getIsConfirmed()) {
            $data->{'is_confirmed'} = $object->getIsConfirmed();
        }
        if (null !== $object->getIsReady()) {
            $data->{'is_ready'} = $object->getIsReady();
        }
        if (null !== $object->getIsFailing()) {
            $data->{'is_failing'} = $object->getIsFailing();
        }
        if (null !== $object->getConfig()) {
            $data->{'config'} = $object->getConfig();
        }
        if (null !== $object->getImport()) {
            $data->{'import'} = $this->normalizer->normalize($object->getImport(), 'json', $context);
        }
        if (null !== $object->getExport()) {
            $data->{'export'} = $this->normalizer->normalize($object->getExport(), 'json', $context);
        }
        if (null !== $object->getTaskId()) {
            $data->{'task_id'} = $object->getTaskId();
        }
        if (null !== $object->getDatasetId()) {
            $data->{'dataset_id'} = $object->getDatasetId();
        }
        if (null !== $object->getCreatedAt()) {
            $data->{'created_at'} = $object->getCreatedAt()->format("Y-m-d\TH:i:sP");
        }
        if (null !== $object->getUpdatedAt()) {
            $data->{'updated_at'} = $object->getUpdatedAt()->format("Y-m-d\TH:i:sP");
        }

        return $data;
    }
}
