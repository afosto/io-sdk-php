<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Afosto\Sdk\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class OdrCustomerNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Afosto\\Sdk\\Model\\OdrCustomer';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'Afosto\\Sdk\\Model\\OdrCustomer';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Afosto\Sdk\Model\OdrCustomer();
        if (property_exists($data, 'id') && $data->{'id'} !== null) {
            $object->setId($data->{'id'});
        }
        if (property_exists($data, 'company') && $data->{'company'} !== null) {
            $object->setCompany($data->{'company'});
        }
        if (property_exists($data, 'first_name') && $data->{'first_name'} !== null) {
            $object->setFirstName($data->{'first_name'});
        }
        if (property_exists($data, 'last_name') && $data->{'last_name'} !== null) {
            $object->setLastName($data->{'last_name'});
        }
        if (property_exists($data, 'last_name_prefix') && $data->{'last_name_prefix'} !== null) {
            $object->setLastNamePrefix($data->{'last_name_prefix'});
        }
        if (property_exists($data, 'is_verified') && $data->{'is_verified'} !== null) {
            $object->setIsVerified($data->{'is_verified'});
        }
        if (property_exists($data, 'is_female') && $data->{'is_female'} !== null) {
            $object->setIsFemale($data->{'is_female'});
        }
        if (property_exists($data, 'born_at') && $data->{'born_at'} !== null) {
            $object->setBornAt($data->{'born_at'});
        }
        if (property_exists($data, 'phone_number') && $data->{'phone_number'} !== null) {
            $object->setPhoneNumber($data->{'phone_number'});
        }
        if (property_exists($data, 'email') && $data->{'email'} !== null) {
            $object->setEmail($data->{'email'});
        }
        if (property_exists($data, 'addresses') && $data->{'addresses'} !== null) {
            $values = [];
            foreach ($data->{'addresses'} as $value) {
                $values[] = $value;
            }
            $object->setAddresses($values);
        }
        if (property_exists($data, 'group_id') && $data->{'group_id'} !== null) {
            $object->setGroupId($data->{'group_id'});
        }
        if (property_exists($data, 'created_at') && $data->{'created_at'} !== null) {
            $object->setCreatedAt(\DateTime::createFromFormat("Y-m-d\TH:i:sP", $data->{'created_at'}));
        }
        if (property_exists($data, 'updated_at') && $data->{'updated_at'} !== null) {
            $object->setUpdatedAt(\DateTime::createFromFormat("Y-m-d\TH:i:sP", $data->{'updated_at'}));
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getId()) {
            $data->{'id'} = $object->getId();
        }
        if (null !== $object->getCompany()) {
            $data->{'company'} = $object->getCompany();
        }
        if (null !== $object->getFirstName()) {
            $data->{'first_name'} = $object->getFirstName();
        }
        if (null !== $object->getLastName()) {
            $data->{'last_name'} = $object->getLastName();
        }
        if (null !== $object->getLastNamePrefix()) {
            $data->{'last_name_prefix'} = $object->getLastNamePrefix();
        }
        if (null !== $object->getIsVerified()) {
            $data->{'is_verified'} = $object->getIsVerified();
        }
        if (null !== $object->getIsFemale()) {
            $data->{'is_female'} = $object->getIsFemale();
        }
        if (null !== $object->getBornAt()) {
            $data->{'born_at'} = $object->getBornAt();
        }
        if (null !== $object->getPhoneNumber()) {
            $data->{'phone_number'} = $object->getPhoneNumber();
        }
        if (null !== $object->getEmail()) {
            $data->{'email'} = $object->getEmail();
        }
        if (null !== $object->getAddresses()) {
            $values = [];
            foreach ($object->getAddresses() as $value) {
                $values[] = $value;
            }
            $data->{'addresses'} = $values;
        }
        if (null !== $object->getGroupId()) {
            $data->{'group_id'} = $object->getGroupId();
        }
        if (null !== $object->getCreatedAt()) {
            $data->{'created_at'} = $object->getCreatedAt()->format("Y-m-d\TH:i:sP");
        }
        if (null !== $object->getUpdatedAt()) {
            $data->{'updated_at'} = $object->getUpdatedAt()->format("Y-m-d\TH:i:sP");
        }

        return $data;
    }
}
