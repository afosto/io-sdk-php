<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Afosto\Sdk\Model;

class IamAuthorizationResponse
{
    /**
     * @var string
     */
    protected $forwardUri;
    /**
     * @var string
     */
    protected $clientName;
    /**
     * @var string
     */
    protected $clientRedirectUri;
    /**
     * @var IamScope[]
     */
    protected $scope;
    /**
     * @var bool
     */
    protected $isAuthorizationApproved = false;
    /**
     * @var bool
     */
    protected $isIdTokenIssued = false;
    /**
     * @var int
     */
    protected $expiresIn;

    public function getForwardUri(): ?string
    {
        return $this->forwardUri;
    }

    public function setForwardUri(?string $forwardUri): self
    {
        $this->forwardUri = $forwardUri;

        return $this;
    }

    public function getClientName(): ?string
    {
        return $this->clientName;
    }

    public function setClientName(?string $clientName): self
    {
        $this->clientName = $clientName;

        return $this;
    }

    public function getClientRedirectUri(): ?string
    {
        return $this->clientRedirectUri;
    }

    public function setClientRedirectUri(?string $clientRedirectUri): self
    {
        $this->clientRedirectUri = $clientRedirectUri;

        return $this;
    }

    /**
     * @return IamScope[]|null
     */
    public function getScope(): ?array
    {
        return $this->scope;
    }

    /**
     * @param IamScope[]|null $scope
     */
    public function setScope(?array $scope): self
    {
        $this->scope = $scope;

        return $this;
    }

    public function getIsAuthorizationApproved(): ?bool
    {
        return $this->isAuthorizationApproved;
    }

    public function setIsAuthorizationApproved(?bool $isAuthorizationApproved): self
    {
        $this->isAuthorizationApproved = $isAuthorizationApproved;

        return $this;
    }

    public function getIsIdTokenIssued(): ?bool
    {
        return $this->isIdTokenIssued;
    }

    public function setIsIdTokenIssued(?bool $isIdTokenIssued): self
    {
        $this->isIdTokenIssued = $isIdTokenIssued;

        return $this;
    }

    public function getExpiresIn(): ?int
    {
        return $this->expiresIn;
    }

    public function setExpiresIn(?int $expiresIn): self
    {
        $this->expiresIn = $expiresIn;

        return $this;
    }
}
