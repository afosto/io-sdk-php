<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Afosto\Sdk\Model;

class CntIndexSettings
{
    /**
     * @var mixed
     */
    protected $synonyms;
    /**
     * @var string[]
     */
    protected $stopWords;
    /**
     * @var string[]
     */
    protected $rankingRules;
    /**
     * @var string[]
     */
    protected $facetFields;
    /**
     * @var string
     */
    protected $distinctField;
    /**
     * @var string[]
     */
    protected $searchFields;
    /**
     * @var string[]
     */
    protected $displayFields;
    /**
     * @var CntListIndexFilter[]
     */
    protected $filters;
    /**
     * @var \DateTime
     */
    protected $lastProcessedAt;

    /**
     * @return mixed
     */
    public function getSynonyms()
    {
        return $this->synonyms;
    }

    /**
     * @param mixed $synonyms
     */
    public function setSynonyms($synonyms): self
    {
        $this->synonyms = $synonyms;

        return $this;
    }

    /**
     * @return string[]|null
     */
    public function getStopWords(): ?array
    {
        return $this->stopWords;
    }

    /**
     * @param string[]|null $stopWords
     */
    public function setStopWords(?array $stopWords): self
    {
        $this->stopWords = $stopWords;

        return $this;
    }

    /**
     * @return string[]|null
     */
    public function getRankingRules(): ?array
    {
        return $this->rankingRules;
    }

    /**
     * @param string[]|null $rankingRules
     */
    public function setRankingRules(?array $rankingRules): self
    {
        $this->rankingRules = $rankingRules;

        return $this;
    }

    /**
     * @return string[]|null
     */
    public function getFacetFields(): ?array
    {
        return $this->facetFields;
    }

    /**
     * @param string[]|null $facetFields
     */
    public function setFacetFields(?array $facetFields): self
    {
        $this->facetFields = $facetFields;

        return $this;
    }

    public function getDistinctField(): ?string
    {
        return $this->distinctField;
    }

    public function setDistinctField(?string $distinctField): self
    {
        $this->distinctField = $distinctField;

        return $this;
    }

    /**
     * @return string[]|null
     */
    public function getSearchFields(): ?array
    {
        return $this->searchFields;
    }

    /**
     * @param string[]|null $searchFields
     */
    public function setSearchFields(?array $searchFields): self
    {
        $this->searchFields = $searchFields;

        return $this;
    }

    /**
     * @return string[]|null
     */
    public function getDisplayFields(): ?array
    {
        return $this->displayFields;
    }

    /**
     * @param string[]|null $displayFields
     */
    public function setDisplayFields(?array $displayFields): self
    {
        $this->displayFields = $displayFields;

        return $this;
    }

    /**
     * @return CntListIndexFilter[]|null
     */
    public function getFilters(): ?array
    {
        return $this->filters;
    }

    /**
     * @param CntListIndexFilter[]|null $filters
     */
    public function setFilters(?array $filters): self
    {
        $this->filters = $filters;

        return $this;
    }

    public function getLastProcessedAt(): ?\DateTime
    {
        return $this->lastProcessedAt;
    }

    public function setLastProcessedAt(?\DateTime $lastProcessedAt): self
    {
        $this->lastProcessedAt = $lastProcessedAt;

        return $this;
    }
}
