<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Afosto\Sdk\Model;

class OdrProcess
{
    /**
     * @var bool
     */
    protected $isPaid;
    /**
     * @var int
     */
    protected $amountPaid;
    /**
     * Start will trigger the transaction, the client can follow the progress via x-task. Follow will send the client to the bank. Execute acutally performs the payment (refund-only). Void means no further actions are possible. Return is the same as [follow] indicating that the payment is complete.
     *
     * @var string
     */
    protected $action;
    /**
     * @var string
     */
    protected $url;
    /**
     * @var OdrAttempt[]
     */
    protected $attempts;

    public function getIsPaid(): ?bool
    {
        return $this->isPaid;
    }

    public function setIsPaid(?bool $isPaid): self
    {
        $this->isPaid = $isPaid;

        return $this;
    }

    public function getAmountPaid(): ?int
    {
        return $this->amountPaid;
    }

    public function setAmountPaid(?int $amountPaid): self
    {
        $this->amountPaid = $amountPaid;

        return $this;
    }

    /**
     * Start will trigger the transaction, the client can follow the progress via x-task. Follow will send the client to the bank. Execute acutally performs the payment (refund-only). Void means no further actions are possible. Return is the same as [follow] indicating that the payment is complete.
     */
    public function getAction(): ?string
    {
        return $this->action;
    }

    /**
     * Start will trigger the transaction, the client can follow the progress via x-task. Follow will send the client to the bank. Execute acutally performs the payment (refund-only). Void means no further actions are possible. Return is the same as [follow] indicating that the payment is complete.
     */
    public function setAction(?string $action): self
    {
        $this->action = $action;

        return $this;
    }

    public function getUrl(): ?string
    {
        return $this->url;
    }

    public function setUrl(?string $url): self
    {
        $this->url = $url;

        return $this;
    }

    /**
     * @return OdrAttempt[]|null
     */
    public function getAttempts(): ?array
    {
        return $this->attempts;
    }

    /**
     * @param OdrAttempt[]|null $attempts
     */
    public function setAttempts(?array $attempts): self
    {
        $this->attempts = $attempts;

        return $this;
    }
}
